name: Build in-code documentation
on:
  push:
    branches:
      - main
      - slidev
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: giellalt/giellalt.github.io

      - name: Install realpath
        run: |
          which realpath

      - name: Setup Node.js for Slidev
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Slidev and dependencies
        run: |
          npm install -g @slidev/cli
          npm install -g @slidev/theme-default
          npm install -g playwright-chromium

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Build Slidev presentations
        env:
          CI: true
          NODE_ENV: production
        run: |
          # Find all markdown files that should have slidev presentations
          find . -name "*.md" -not -path "./_*" -not -path "./node_modules/*" | while read mdfile; do
            basename=$(basename "$mdfile" .md)
            dirname=$(dirname "$mdfile")
            slidev_dir="${dirname}/${basename}-slidev"
            
            # Check if there are any links to this slidev directory in the site
            if grep -r "${basename}-slidev/" . --include="*.md" --include="*.html" > /dev/null 2>&1; then
              echo "Building Slidev presentation for $mdfile -> $slidev_dir"
              mkdir -p "$slidev_dir"
              
              # Copy and adapt the markdown for Slidev
              echo "---" > "$slidev_dir/slides.md"
              echo "theme: seriph" >> "$slidev_dir/slides.md"
              echo "background: https://source.unsplash.com/1920x1080/?nature,water" >> "$slidev_dir/slides.md"
              echo "class: text-center" >> "$slidev_dir/slides.md"
              echo "highlighter: shiki" >> "$slidev_dir/slides.md"
              echo "lineNumbers: false" >> "$slidev_dir/slides.md"
              echo "info: |" >> "$slidev_dir/slides.md"
              echo "  Presentation generated from $(basename $mdfile)" >> "$slidev_dir/slides.md"
              echo "drawings:" >> "$slidev_dir/slides.md"
              echo "  persist: false" >> "$slidev_dir/slides.md"
              echo "---" >> "$slidev_dir/slides.md"
              echo "" >> "$slidev_dir/slides.md"
              
              # Convert markdown content for Slidev format
              tail -n +2 "$mdfile" | sed 's/^# /---\n\n# /' >> "$slidev_dir/slides.md"
              
              # Build the presentation
              cd "$slidev_dir"
              echo "yes" | slidev build slides.md --base "/${basename}-slidev/" --out dist
              cd - > /dev/null
            fi
          done

      - name: Build Jekyll site
        env:
          JEKYLL_GITHUB_TOKEN: ${{ secrets.GIELLALT_DOCS_GH_TOKEN }}
        run: bundle exec jekyll build --verbose

      - name: Copy Slidev presentations to Jekyll site
        run: |
          find . -name "*-slidev/dist" -type d | while read slidev_dist; do
            slidev_name=$(basename $(dirname "$slidev_dist"))
            echo "Copying Slidev presentation: $slidev_dist -> _site/$slidev_name/dist/"
            mkdir -p "_site/$slidev_name/dist"
            cp -r "$slidev_dist"/* "_site/$slidev_name/dist/"
            
            # Copy the slides.md file for reference
            if [ -f "$(dirname "$slidev_dist")/slides.md" ]; then
              cp "$(dirname "$slidev_dist")/slides.md" "_site/$slidev_name/"
            fi
            
            # Create index.html that redirects to dist/index.html
            cat > "_site/$slidev_name/index.html" << 'EOF'
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta http-equiv="refresh" content="0; url=./dist/index.html">
  <title>Redirecting to Presentation...</title>
</head>
<body>
  <p>Redirecting to presentation... <a href="./dist/index.html">Click here if not redirected</a></p>
</body>
</html>
EOF
            
            # Create a .nojekyll file to prevent Jekyll from processing these files
            touch "_site/$slidev_name/.nojekyll"
            
            # List what was copied for debugging
            echo "Files in _site/$slidev_name/:"
            ls -la "_site/$slidev_name/"
            echo "Files in _site/$slidev_name/dist/:"
            ls -la "_site/$slidev_name/dist/" | head -10
          done

      - name: deploy gh pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
          enable_jekyll: false
